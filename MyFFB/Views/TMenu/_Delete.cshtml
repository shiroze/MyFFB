@model MyAttd.Models.T_Menu

@if (ViewBag.Message != null)
{
    <h1 class="@ViewBag.MessageCSS">@ViewBag.MessageType</h1>
    <p class="@ViewBag.MessageCSS">@ViewBag.Message</p>
}
else
{
    @using (Html.BeginForm("Delete", "TMenu", FormMethod.Post, new { id = "frmId", @class = "frmStyle" }))
    {

        //using (Html.DevExtreme().ValidationGroup())
        //{
        @Html.AntiForgeryToken()
        <div class="editors">
            <div class="dx-fieldset col-md-12">
                <div class="dx-fieldset-header" style="text-decoration:underline">Item Menu</div>
                <div class="dx-field center col-md-12">
                    @Html.LabelFor(m => m.FCMenuCode)
                    @*@Html.DevExtreme().TextBoxFor(m => m.FCMenuCode).ID("FCMenuCode").ReadOnly(true)*@
                    @Html.TextBoxFor(m => m.FCMenuCode, new { @id = "FCMenuCode", @class = "form-control" })
                </div>
                <div class="dx-field center col-md-12">
                    @Html.LabelFor(m => m.FCMenuDesc)
                    @*@Html.DevExtreme().TextBoxFor(m => m.FCMenuDesc).ID("FCMenuDesc").ReadOnly(true)*@
                    @Html.TextBoxFor(m => m.FCMenuDesc, new { @id = "FCMenuDesc", @class = "form-control" })
                </div>
                <div class="dx-field left col-md-6">
                    @Html.LabelFor(m => m.FCMenuPID)
                    @*@Html.DevExtreme().SelectBoxFor(m => m.FCMenuPID).DataSource(ViewBag.DListZeroParentID).ID("FCMenuPID").DisplayExpr("FCMenuDesc").ValueExpr("FCMenuID").ReadOnly(true)*@
                    <select id="FCMenuPID" name="FCMenuPID" class="form-control">
                        @foreach (var item in ViewBag.DListZeroParentID)
                        {
                            <option value="@item.FCMenuID">@item.FCMenuDesc</option>
                        }
                    </select>
                </div>
                <div class="dx-field left col-md-6">
                    @Html.LabelFor(m => m.FCOrderNo)
                    @*@Html.DevExtreme().NumberBoxFor(m => m.FCOrderNo).ID("FCOrderNo").ShowSpinButtons(true).ReadOnly(true)*@
                    @Html.TextBoxFor(m => m.FCOrderNo, new { @type = "number", @id = "FCOrderNo", @class = "form-control" })
                </div>
                <div class="dx-field left col-md-6">
                    @*@Html.DevExtreme().CheckBoxFor(m => m.FCHidden).Text("Hide Menu").ReadOnly(true)*@
                    @Html.CheckBoxFor(m => m.FCHidden)
                    Hide Menu
                </div>
            </div>
            @Html.HiddenFor(m => m.FCMenuID)
            <div class="dx-fieldset col-md-12">
                <div class="dx-field right col-md-4">
                    @*@Html.DevExtreme().Button().ID("button").Text("Hapus").Type(ButtonType.Danger).UseSubmitBehavior(true)*@
                    <button type="button" class="btn btn-danger" onclick="saveClick()">Hapus</button>
                </div>
            </div>
        </div>

        //}
    }

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }

    <script>
        DevExpress.config({
            editorStylingMode: "outlined"
        });

    </script>


}
