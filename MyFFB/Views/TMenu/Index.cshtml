@model IEnumerable<MyAttd.Models.T_Menu>

@{
    ViewData["Title"] = "Setting - Menu";
}
<section class="content-header">
    <h1>@ViewData["Title"]</h1>
</section>

@if (ViewData["Message"] != null)
{
    <section class="content" style="min-height:0px !important;padding-top:0px !important; padding-bottom:0px !important;">
        <div class="row">
            <div class="col-xs-12">
                <div class="box box-warning box-solid" style="margin-top:15px;">
                    <div class="box-header with-border">
                        <h3 class="box-title">Perhatian!</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                        </div>
                    </div>
                    <div class="box-body">
                        @ViewData["Message"]
                    </div>
                </div>
            </div>
        </div>
    </section>
}

<section class="content container-fluid">
    <div class="box">
        <div class="box-header with-border">
            @*@(Html.DevExtreme().Button()
                                    .Text("Root Menu")
                                    .Type(ButtonType.Normal)
                                    .StylingMode(ButtonStylingMode.Contained)
                                    .Icon("fa fa-plus-circle")
                                    .OnClick("newRootMenuClick")
            )
            @(Html.DevExtreme().Button()
                                .Text("Item Menu")
                                .Type(ButtonType.Normal)
                                .StylingMode(ButtonStylingMode.Contained)
                                .Icon("fa fa-plus-circle")
                                .OnClick("newItemMenuClick")
            )*@
            <button type="button" class="btn btn-light" onclick="newRootMenuClick()">
                <i class="fa fa-plus-circle"></i>
                <span class="">Root Menu</span>
            </button>
            <button type="button" class="btn btn-light" onclick="newItemMenuClick()">
                <i class="fa fa-plus-circle"></i>
                <span class="">Item Menu</span>
            </button>
            <button class="btn btn-danger" onclick="print('PDF')">
                <i class="fa fa-file-pdf-o"></i>
                <span class="">Preview PDF</span>
            </button>
        </div>
        <div class="box-body">
            <table id="menu-table" class="table table-hover">
                <thead>
                    <tr>
                        <th></th>
                        <th>System Code</th>
                        <th>Item Menu</th>
                        <th>No Urut</th>
                        <th>Hide Menu</th>
                        <th>Dibuat Oleh</th>
                        <th>Tanggal Pembuatan</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                    <tr>
                        <td>
                            <a href="@Url.Action("EditParent","TMenu", new { id = item.FCMenuID })"><i class="fa fa-pencil text-green"></i></a>
                            <a href="javascript:void(0);" onclick="deleteIconClick(@item.FCMenuID);"><i class="fa fa-trash text-danger"></i></a>
                        </td>
                        <td>@item.FCMenuCode</td>
                        <td>@item.FCMenuDesc</td>
                        <td>@item.FCOrderNo</td>
                        <td>
                            @if (item.FCHidden)
                            {
                                <input type="checkbox" value="1" checked disabled />
                            }
                            else
                            {
                                <input type="checkbox" value="0" disabled />
                            }
                        </td>
                        <td>@item.CreatedBy.FCName</td>
                        <td>@item.FCCreatedDT.ToString("dd-MM-yyyy hh:mm")</td>
                    </tr>
                    }
                </tbody>
            </table>
            @*@(Html.DevExtreme().DataGrid<T_Menu>()
                                                    .ID("gridContainer")
                                                    .DataSource(Model)
                                                    .FilterRow(r => r.Visible(true))
                                                    .ShowBorders(true)
                                                    .ShowColumnLines(true)
                                                    .RowAlternationEnabled(true)
                                                    .ColumnChooser(c => c.Enabled(true))
                                                    .LoadPanel(p => p.Enabled(true))
                                                    .Columns(columns =>
                                                    {
                                                        columns.Add()
                                                        .Type(GridCommandColumnType.Buttons)
                                                        .Width(110)
                                                        .Buttons(b =>
                                                        {
                                                            b.Add().Hint("Edit").Icon("edit").OnClick("editIconClick");
                                                            b.Add().Hint("Delete").Icon("trash").CssClass("text-red").OnClick("deleteIconClick");
                                                        });
                                                        columns.AddFor(m => m.FCMenuID)
                                                            .Width(130).Visible(false);

                                                        columns.AddFor(m => m.FCMenuCode).Caption("System Code");

                                                        columns.AddFor(m => m.FCMenuDesc).Caption("Item Menu");

                                                        columns.AddFor(m => m.FCOrderNo);

                                                        columns.AddFor(m => m.FCHidden).Caption("Hide Menu");

                                                        columns.AddFor(m => m.CreatedBy.FCName)
                                                            .Caption("Dibuat Oleh")
                                                            .Width(130)
                                                            .Alignment(HorizontalAlignment.Left);

                                                        columns.AddFor(m => m.FCCreatedDT)
                                                            .Width(200)
                                                            .Format("dd/MM/yyyy [HH:mm:ss]");
                                                                                                                

                                                        columns.AddFor(m => m.RootMenu.FCMenuDesc).Caption("Root Menu")
                                                            .GroupIndex(0);
                                                    })
            )*@

        </div>
    </div>
</section>

<div id="popup">
</div>

<script>
    $(function () {
        $("#popup").dxPopup({
            title: "Popup Title",
            visible: false,
            closeOnOutsideClick: false,
            width:550,
            height: 500,
            resizeEnabled: false
        });
        $('#menu-table').DataTable({
            order: [['1', 'asc']],
            lengthMenu: [
                [10, 25, 50, -1],
                [10, 25, 50, "Show All"]
            ],
            pageLength: 50,
            dom: "<'row'<'col-md-3'l><'col-md-5'f><'col-md-4 text-right'B>>Prt<'row'<'col-md-6'i><'col-md-6'p>>",
            buttons: [
                {
                    extend: "copy",
                    className: "btn-info",
                    exportOptions: {
                        modifier: {
                            page: 'current'
                        },
                        columns: ':visible:not(.not-exported)',
                        rows: ':visible',
                        stripHtml: false,
                    },
                },
                {
                    extend: "csv",
                    className: "btn-success",
                    exportOptions: {
                        columns: ':visible:not(.not-exported)',
                        rows: ':visible',
                        stripHtml: false,
                    },
                },
                {
                    extend: "pdf",
                    className: "btn-danger",
                    exportOptions: {
                        columns: ':visible:not(.not-exported)',
                        rows: ':visible',
                        stripHtml: false,
                    },
                },
                {
                    extend: "print",
                    className: "btn-secondary",
                    exportOptions: {
                        columns: ':visible:not(.not-exported)',
                        rows: ':visible',
                        stripHtml: false,
                    },
                },
            ],
        });
    });

    function newRootMenuClick(e) {
        $.ajax({
                url: '@Url.Action("Create", "TMenu")',
                traditional: true,
                data: {  }
        }).done (function (response) {
            $("#popup").dxPopup({
                title: "Tambah Baru",
                visible: true,
                contentTemplate: function (contentElement) {
                    contentElement.append(response)
                }
            });
        }).fail(function (data) {
                alert("Failed: " + data.response);
        });
    }

    function newItemMenuClick(e) {
        $.ajax({
                url: '@Url.Action("CreateItem", "TMenu")',
                traditional: true,
                data: {  }
        }).done (function (response) {
            $("#popup").dxPopup({
                title: "Tambah Item",
                visible: true,
                contentTemplate: function (contentElement) {
                    contentElement.append(response)
                }
            });
        }).fail(function (data) {
                alert("Failed: " + data.response);
        });
    }

    function editIconClick(id) {
        $.ajax({
            //url: '/TMenu/Edit/?id=' + e.row.data.FCMenuID,
            url: '@Url.Action("Edit", "TMenu")',
            traditional: true,
            data: { id},
        }).done(function (response) {
            $("#popup").dxPopup({
                title: "Ubah",
                visible: true,
                contentTemplate: function (contentElement) {
                    contentElement.append(response)
                }
            });
        }).fail(function (data) {
            alert("Failed: " + data.response);
        });
    }

    function deleteIconClick(id) {
        $.ajax({
            //url: '/TMenu/Delete/?id=' + e.row.data.FCMenuID,
            url: '@Url.Action("Delete", "TMenu")',
            traditional: true,
            data: { id },
        }).done(function (response) {
            $("#popup").dxPopup({
                title: "Hapus",
                visible: true,
                contentTemplate: function (contentElement) {
                    contentElement.append(response)
                }
            });
        }).fail(function (data) {
            alert("Failed: " + data.response);
        });
    }

    function print() {
        var url = '@Url.Action("Print", "TMenu")';
        var request = new XMLHttpRequest();
        const car = { FCRoleID: 0 };
        request.responseType = "blob";
        request.open('POST', url);
        request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
        request.send(JSON.stringify(car));
        request.onload = function () {
            //if (par == "PDF") {
                var url = window.URL.createObjectURL(this.response);
                var a = document.createElement("a");
                document.body.appendChild(a);
                a.href = url;
                a.setAttribute('target', '_blank');
                a.click();
            //}
            //else {
            //    if (this.status === 200) {
            //        var blob = this.response;
            //        var reader = new FileReader();
            //        reader.readAsDataURL(blob);
            //        reader.onload = function (e) {
            //            var a = document.createElement("a");
            //            //console.log(a)
            //            a.download = "FFBRecap.xls";
            //            a.href = e.target.result;
            //            a.click();
            //        };
            //    }
            //}
        }
    }

</script>