@model IEnumerable<MyAttd.Models.T_User>

@{
    ViewData["Title"] = "Setting - User";
}

<section class="content-header">
    <h1>@ViewData["Title"]</h1>
</section>

@if (ViewData["Message"] != null)
{
    <section class="content" style="min-height:0px !important;padding-top:0px !important; padding-bottom:0px !important;">
        <div class="row">
            <div class="col-xs-12">
                <div class="box box-warning box-solid" style="margin-top:15px;">
                    <div class="box-header with-border">
                        <h3 class="box-title">Perhatian!</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                        </div>
                    </div>
                    <div class="box-body">
                        @ViewData["Message"]
                    </div>
                </div>
            </div>
        </div>
    </section>
}

<section class="content container-fluid">
    <div class="box">
        <div class="box-header with-border">
            @*@(Html.DevExtreme().Button()
                                                .Text("User")
                                                .Type(ButtonType.Normal)
                                                .StylingMode(ButtonStylingMode.Contained)
                                                .Icon("fa fa-plus-circle")
                                                .OnClick("newClick")
        )*@
            <button type="button" class="btn btn-light" onclick="newClick()">
                <i class="fa fa-plus-circle"></i>
                <span class="">User</span>
            </button>
            @*<button class="btn btn-danger" onclick="print()">
            <h4><i class="fa fa-file-pdf-o"></i> Preview PDF</h4>
        </button>*@
        </div>
        <div class="box-body">
            <table id="menu-table" class="table table-hover">
                <thead>
                    <tr>
                        <th></th>
                        <th>Nama Pengguna</th>
                        <th>Nama</th>
                        <th>Role Desc</th>
                        <th>Set PMKS</th>
                        <th>Expired DT</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <div class="d-flex justify-content-between">
                                    <a href="javascript:void(0);" onclick="editIconClick(@item.FCUserID);"><i class="fa fa-pencil text-green"></i></a>
                                    @if (!item.FCDefunctInd)
                                    {
                                        <a href="javascript:void(0);" onclick="deleteIconClick(@item.FCUserID);"><i class="fa fa-trash text-danger"></i></a>
                                    }
                                    @if (item.FCDefunctInd)
                                    {
                                        <a href="javascript:void(0);" onclick="undeleteIconClick(@item.FCUserID);"><i class="fa fa-mail-reply text-warning"></i></a>
                                    }
                                    @if (!item.FCBlocked)
                                    {
                                        <a href="javascript:void(0);" onclick="blockIconClick(@item.FCUserID);"><i class="fa fa-lock text-teal"></i></a>
                                    }
                                    @if (item.FCBlocked)
                                    {
                                        <a href="javascript:void(0);" onclick="unblockIconClick(@item.FCUserID);"><i class="fa fa-unlock-alt text-teal"></i></a>
                                    }
                                    <a href="javascript:void(0);" onclick="resetIconClick(@item.FCUserID);"><i class="fa fa-key text-light-blue"></i></a>
                                </div>
                            </td>
                            <td>@item.FCUserName</td>
                            <td>@item.FCName</td>
                            <td>@item.Role.FCRoleDesc</td>
                            <td>@item.SetPMKSID</td>
                            <td>@item.FCPassExpDT.ToString("dd-MM-yyyy hh:mm")</td>
                            @*<td>@item.CreatedBy.FCName</td>
                            <td>@item.FCCreatedDT</td>
                            <td>@item.UpdatedBy.FCName</td>
                            <td>@item.FCUpdatedDT</td>*@
                        </tr>
                    }
                </tbody>
            </table>
            @*@(Html.DevExtreme().DataGrid<T_User>()
                                                        .ID("gridContainer")
                                                        .DataSource(Model)
                                                        .FilterRow(r => r.Visible(true))
                                                        .ShowBorders(true)
                                                        .ShowColumnLines(true)
                                                        .RowAlternationEnabled(true)
                                                        .ColumnChooser(c => c.Enabled(true))
                                                        .LoadPanel(p => p.Enabled(true))
                                                        .Columns(columns =>
                                                        {
                                                            columns.Add()
                                                            .Width(120)
                                                            .Type(GridCommandColumnType.Buttons)
                                                            .Buttons(b =>
                                                            {
                                                                b.Add().Hint("Edit").Icon("edit").Visible(new JS("isDeleteIconVisible")).OnClick("editIconClick");
                                                                b.Add().Hint("Delete").Icon("trash").CssClass("text-red").Visible(new JS("isDeleteIconVisible")).OnClick("deleteIconClick");
                                                                b.Add().Hint("Undelete").Icon("fa fa-mail-reply").CssClass("text-yellow").Visible(new JS("isUndeleteIconVisible")).OnClick("undeleteIconClick");
                                                                b.Add().Hint("Block").Icon("fa fa-lock").CssClass("text-teal").Visible(new JS("isBlockIconVisible")).OnClick("blockIconClick");
                                                                b.Add().Hint("Unblock").Icon("fa fa-unlock-alt").CssClass("text-teal").Visible(new JS("isUnblockIconVisible")).OnClick("unblockIconClick");
                                                                b.Add().Hint("Reset Password").Icon("fa fa-key").CssClass("text-light-blue").OnClick("resetIconClick");
                                                            });
                                                            columns.AddFor(m => m.FCUserID)
                                                                .Width(130).Visible(false);

                                                            columns.AddFor(m => m.FCUserName);

                                                            columns.AddFor(m => m.FCName);

                                                            //columns.AddFor(m => m.AreaOperational);
                                                            //columns.AddFor(m => m.Regional);

                                                            columns.AddFor(m => m.Role.FCRoleDesc);
                                                            columns.AddFor(m => m.SetPMKSID);
                                                            //columns.AddFor(m => m.FCLoginAttempt)
                                                            //    .Width(100);

                                                            //columns.AddFor(m => m.FCBlocked)
                                                            //    .Width(100);

                                                            //columns.AddFor(m => m.FCDefunctInd)
                                                            //    .Width(100);

                                                            columns.AddFor(m => m.FCPassExpDT)
                                                                    .Caption("Expired DT")
                                                                    .Width(200)
                                                                    .Format("dd/MM/yyyy [HH:mm:ss]");

                                                            columns.AddFor(m => m.CreatedBy.FCName).Visible(false)
                                                                .Caption("Dibuat Oleh")
                                                                .Width(130)
                                                                .Alignment(HorizontalAlignment.Left);

                                                            columns.AddFor(m => m.FCCreatedDT).Visible(false)
                                                                .Width(200)
                                                                .Format("dd/MM/yyyy [HH:mm:ss]");

                                                            columns.AddFor(m => m.UpdatedBy.FCName).Visible(false)
                                                                .Caption("Diubah Oleh")
                                                                .Width(130)
                                                                .Alignment(HorizontalAlignment.Left);

                                                            columns.AddFor(m => m.FCUpdatedDT).Visible(false)
                                                                .Width(200)
                                                                .Format("dd/MM/yyyy [HH:mm:ss]");
                                                        })

        )*@

        </div>
    </div>
</section>

<div id="popup">
</div>
<div id="popupChild">
</div>

<script>
    $(function () {
        $("#popup").dxPopup({
            title: "Popup Title",
            visible: false,
            closeOnOutsideClick: true,
            width: 600,
            height: 600,
            resizeEnabled: true
        });
        $("#popupChild").dxPopup({
            title: "Popup Title",
            visible: false,
            closeOnOutsideClick: true,
            width: 600,
            height: 600,
            resizeEnabled: true
        });
        $('#menu-table').DataTable({
            order: [['1', 'asc']],
            lengthMenu: [
                [10, 25, 50, -1],
                [10, 25, 50, "Show All"]
            ],
            pageLength: 50,
            dom: "<'row'<'col-md-3'l><'col-md-5'f><'col-md-4 text-right'B>>Prt<'row'<'col-md-6'i><'col-md-6'p>>",
            buttons: [
                {
                    extend: "copy",
                    className: "btn-info",
                    exportOptions: {
                        modifier: {
                            page: 'current'
                        },
                        columns: ':visible:not(.not-exported)',
                        rows: ':visible',
                        stripHtml: false,
                    },
                },
                {
                    extend: "csv",
                    className: "btn-success",
                    exportOptions: {
                        columns: ':visible:not(.not-exported)',
                        rows: ':visible',
                        stripHtml: false,
                    },
                },
                {
                    extend: "pdf",
                    className: "btn-danger",
                    exportOptions: {
                        columns: ':visible:not(.not-exported)',
                        rows: ':visible',
                        stripHtml: false,
                    },
                },
                {
                    extend: "print",
                    className: "btn-secondary",
                    exportOptions: {
                        columns: ':visible:not(.not-exported)',
                        rows: ':visible',
                        stripHtml: false,
                    },
                },
            ],
        });
    });

    var isDeleteIconVisible = function (e) {
        if (e.row.data.FCDefunctInd == false) {
            return true;
        }
        else {
            return false
        }
    }

    var isUndeleteIconVisible = function (e) {
        if (e.row.data.FCDefunctInd == true) {
            return true;
        }
        else {
            return false
        }
    }

    var isBlockIconVisible = function (e) {
        if (e.row.data.FCBlocked == false) {
            return true;
        }
        else {
            return false
        }
    }

    var isUnblockIconVisible = function (e) {
        if (e.row.data.FCBlocked == true) {
            return true;
        }
        else {
            return false
        }
    }

    function newClick(e) {
        $.ajax({
                url: '@Url.Action("Create", "TUser")',
                traditional: true,
                data: {  }
        }).done (function (response) {
            $("#popup").dxPopup({
                title: "Add User",
                visible: true,
                contentTemplate: function (contentElement) {
                    contentElement.append(response)
                }
            });
        }).fail(function (data) {
                alert("Failed: " + data.response);
        });
    }

    function resetIconClick(id) {
        $.ajax({
            //url: '/TUser/Reset/?id=' + e.row.data.FCUserID,
            url: '@Url.Action("Reset", "TUser")',
            traditional: true,
            data: { id },
        }).done(function (response) {
            $("#popup").dxPopup({
                title: "Reset Password",
                visible: true,
                contentTemplate: function (contentElement) {
                    contentElement.append(response)
                }
            });
        }).fail(function (data) {
            alert("Failed: " + data.response);
        });
    }

    function editIconClick(id) {
        $.ajax({
            //url: '/TUser/Edit/?id=' + e.row.data.FCUserID,
            url: '@Url.Action("Edit", "TUser")',
            traditional: true,
            data: { id },
        }).done(function (response) {
            $("#popup").dxPopup({
                title: "Edit User",
                visible: true,
                contentTemplate: function (contentElement) {
                    contentElement.append(response)
                }
            });
        }).fail(function (data) {
            alert("Failed: " + data.response);
        });
    }

    function deleteIconClick(id) {
        $.ajax({
            //url: '/TUser/Delete/?id=' + e.row.data.FCUserID,
            url: '@Url.Action("Delete", "TUser")',
            traditional: true,
            data: { id },
        }).done(function (response) {
            $("#popup").dxPopup({
                title: "Delete User",
                visible: true,
                contentTemplate: function (contentElement) {
                    contentElement.append(response)
                }
            });
        }).fail(function (data) {
            alert("Failed: " + data.response);
        });
    }

    function undeleteIconClick(id) {
        $.ajax({
            //url: '/TUser/Undelete/?id=' + e.row.data.FCUserID,
            url: '@Url.Action("Undelete", "TUser")',
            traditional: true,
            data: { id },
        }).done(function (response) {
            $("#popup").dxPopup({
                title: "Undelete User",
                visible: true,
                contentTemplate: function (contentElement) {
                    contentElement.append(response)
                }
            });
        }).fail(function (data) {
            alert("Failed: " + data.response);
        });
    }

    function blockIconClick(id) {
        $.ajax({
            //url: '/TUser/Block/?id=' + e.row.data.FCUserID,
            url: '@Url.Action("Block", "TUser")',
            traditional: true,
            data: { id },
        }).done(function (response) {
            $("#popup").dxPopup({
                title: "Block User",
                visible: true,
                contentTemplate: function (contentElement) {
                    contentElement.append(response)
                }
            });
        }).fail(function (data) {
            alert("Failed: " + data.response);
        });
    }

    function unblockIconClick(id) {
        $.ajax({
            //url: '/TUser/Unblock/?id=' + e.row.data.FCUserID,
            url: '@Url.Action("Unblock", "TUser")',
            traditional: true,
            data: { id },
        }).done(function (response) {
            $("#popup").dxPopup({
                title: "Unblock User",
                visible: true,
                contentTemplate: function (contentElement) {
                    contentElement.append(response)
                }
            });
        }).fail(function (data) {
            alert("Failed: " + data.response);
        });
    }
    function GridPMKS() {
        $.ajax({
            //url: '/TSAPVendor/GridPMKS?setPMKSIDuser=' + $("#SetPMKSID").val(),
            url: '@Url.Action("GridPMKS", "TSAPVendor")',
            traditional: true,
            data: { setPMKSIDuser: $("#SetPMKSID").val()}
        }).done(function (response) {
            $("#popupChild").dxPopup({
                title: "List PMKS",
                visible: true,
                contentTemplate: function (contentElement) {
                    contentElement.append(response)
                }
            });
        }).fail(function (data) {
            alert("Failed: " + data.response);
        });
    }
    function selectPMKS(a, b, c, d) {
        let text =
            "Data" +
            "\Company Code : " + a +
            "\nCompany Name : " + b +
            "\nPMKS ID : " + c +
            "\nPMKS Name : " + d;

        if (true) {
            var separator = '';
            if ($("#SetPMKSID").val() != '') {
                separator = ',';
            }

            $("#SetPMKSID").val($("#SetPMKSID").val()+separator+c);
            $("#popupChild").dxPopup('instance').hide();
        }
    }
    function print() {
        var url = '@Url.Action("Print", "TUser")';
        var request = new XMLHttpRequest();
        const car = { FCRoleID: 0 };
        request.responseType = "blob";
        request.open('POST', url);
        request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
        request.send(JSON.stringify(car));
        request.onload = function () {
            //if (par == "PDF") {
            var url = window.URL.createObjectURL(this.response);
            var a = document.createElement("a");
            document.body.appendChild(a);
            a.href = url;
            a.setAttribute('target', '_blank');
            a.click();
        }
    }

</script>